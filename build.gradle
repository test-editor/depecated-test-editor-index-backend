group = 'org.testeditor.web'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.xtext:xtext-gradle-plugin:1.0.18'
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.xtext.xtend'
apply plugin: 'application'
apply plugin: 'net.researchgate.release'
apply plugin: 'com.jfrog.bintray'

apply from: "$rootDir/gradle/publishing.gradle"

apply from: 'code-style/codestyle.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    maven {
        url  "http://dl.bintray.com/test-editor/maven"
    }
}

ext.versions = [
    dropwizard: '1.2.0',
    xtext: '2.13.0',
    testEditorLanguage: '1.8.0',
    xtextIndexBackend: '0.2.0'
]
ext.configPath = './'

sourceSets {
    main.xtendOutputDir = 'src/main/xtend-gen'
    test.xtendOutputDir = 'src/test/xtend-gen'
}

dependencies {
    compile "org.eclipse.xtend:org.eclipse.xtend.lib:$versions.xtext"
    compile "org.eclipse.xtext:org.eclipse.xtext:$versions.xtext"
    compile "io.dropwizard:dropwizard-core:$versions.dropwizard"
    compile "org.testeditor.web:xtext-index-backend:$versions.xtextIndexBackend"

    compile "org.testeditor:org.testeditor.tsl.dsl.web:$versions.testEditorLanguage"
    compile ("org.testeditor:org.testeditor.tcl.dsl:$versions.testEditorLanguage") {
        exclude group: "org.apache.logging.log4j"
    }

    compile "org.testeditor:org.testeditor.tcl.model:$versions.testEditorLanguage"
    compile "org.testeditor:org.testeditor.aml.dsl:$versions.testEditorLanguage"
    compile "org.testeditor:org.testeditor.aml.model:$versions.testEditorLanguage"
    compile "org.testeditor:org.testeditor.dsl.common:$versions.testEditorLanguage"

    compile "org.testeditor:org.testeditor.dsl.common.model:$versions.testEditorLanguage"

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.gradle:gradle-tooling-api:2.14.1'
    compile "org.eclipse.xtend:org.eclipse.xtend.core:$versions.xtext"

    testCompile 'junit:junit:4.12'
    testCompile "io.dropwizard:dropwizard-testing:$versions.dropwizard"
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.mockito:mockito-core:2.11.0'
    testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:$versions.xtext"
}

mainClassName = 'org.testeditor.web.index.TesteditorIndexApplication'

run {
	main mainClassName
	args 'server', configPath + 'config.yml'
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

/*
 * Configure release plugin.
 * Remove tasks "updateVersion" and "commitNewVersion" as we don't want the new SNAPSHOT
 * version commit on the master branch.
 */
tasks.release.tasks -= [":updateVersion", ":commitNewVersion"]
release {
    preTagCommitMessage = '[release]'
    tagCommitMessage = '[release]'
    newVersionCommitMessage = '[release] new version'
    tagTemplate = 'v${version}'
}

afterReleaseBuild.dependsOn bintrayUpload
